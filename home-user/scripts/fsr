#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.


REC_PATH=/home/lucas/Videos/screencast/

updateicon() { \
	echo "$1" > /tmp/recordingicon
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
	}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
	# even after SIGTERM, ffmpeg may still run, so SIGKILL it.
	sleep 3
	kill -9 "$recpid"
	exit
	}

screencast_input() { \
	ffmpeg -y \
  -f pulse -thread_queue_size 256 -ac 2 -i alsa_input.pci-0000_00_1b.0.analog-stereo \
	-f x11grab -thread_queue_size 256 \
	-framerate 30 \
	-s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
	-i "$DISPLAY" \
  -c:v libx264 -preset ultrafast -threads 0 -profile:v baseline -level 3.0 -pix_fmt yuv420p \
	"screencast-$(date '+%F_%H-%M-%S').mp4" &
	echo $! > /tmp/recordingpid
  updateicon "‚è∫Ô∏èüéôÔ∏è"
       	}

screencast_output() { \
	ffmpeg -y \
  -f pulse -thread_queue_size 256 -ac 2 -i alsa_output.pci-0000_00_1b.0.analog-stereo.monitor \
	-f x11grab -thread_queue_size 256 \
	-framerate 30 \
	-s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
	-i "$DISPLAY" \
  -c:v libx264 -preset ultrafast -threads 0 -profile:v baseline -level 3.0 -pix_fmt yuv420p \
	"screencast-$(date '+%F_%H-%M-%S').mp4" &
	echo $! > /tmp/recordingpid
  updateicon "‚è∫Ô∏èüéôÔ∏è"
       	}

video() { ffmpeg \
	-f x11grab \
	-s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
	-i "$DISPLAY" \
 	-c:v libx264 -qp 0 -r 30 \
	"gvideo-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "‚è∫Ô∏è"
	}

webcamhidef() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	"gwebcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "üé•"
	}

webcam() { ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	"gwebcam-$(date '+%y%m%d-%H%M-%S').mkv" &
	echo $! > /tmp/recordingpid
	updateicon "üé•"
	}


audio() { \
	ffmpeg \
	-f alsa -i default \
	-c:a flac \
	"gaudio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
	updateicon "üéôÔ∏è"
	}

askrecording() { \
	choice=$(printf "1.screencast_input\\n2.screencast_output\\n3.video\\n4.audio\\n5.webcam\\n6.webcam (hi-def)" | dmenu -l 20 -p "Select recording style:")
	case "$choice" in
		1.screencast_input) screencast_input;;
		2.screencast_output) screencast_output;;
    3.video) video;;
		4.audio) audio;;
		5.webcam) webcam;;
		"6.webcam (hi-def)") webcamhidef;;
	esac
	}

asktoend() { \
	response=$(printf "1.Yes\\n2.No" | dmenu -l 20 -p "Recording still active. End recording?") &&
	[ "$response" = "1.Yes" ] &&  killrecording
	}


cd $REC_PATH
case "$1" in
	screencast) screencast;;
	audio) audio;;
	video) video;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
